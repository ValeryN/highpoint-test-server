// Content below is autogenerated by ojster template engine
// usually there is no reason to edit it manually
"use strict";
var inherits = require('util').inherits;
var Layout = require('./layout');

var Main = function (opt_data, opt_ctx, opt_writer) {
  Layout.call(this, opt_data, opt_ctx, opt_writer);
};
inherits(Main, Layout);


Main.prototype.renderBlockTitle = function () { // @7:1
  var self = this;
  var d = this.data, vars = this.vars;
  self.writer.write(
    'Панель тестирования'
  );
}; // @9:1


Main.prototype.renderBlockCss = function () { // @12:1
  var self = this;
  var d = this.data, vars = this.vars;
  Layout.prototype.renderBlockCss.call(this); // @13:1

  if (d.compiled) {

  self.writer.write(
    '<link media=\'all\' rel=\'stylesheet\' type=\'text/css\' href=\'/s/css/panel.css\'>'
  ); // @16:1

  } else {

  self.writer.write(
    '<link media=\'all\' rel=\'stylesheet\' type=\'text/css\' href=\'/s_dev/css/panel.css\'>'
  ); // @18:1

  }

}; // @19:1


Main.prototype.renderBlockJs = function () { // @22:1
  var self = this;
  var d = this.data, vars = this.vars;
  Layout.prototype.renderBlockJs.call(this); // @23:1

  if (d.compiled) {

  self.writer.write(
    '<script src=\'/s/js/panel.js\'></script>'
  ); // @26:1

  } else {

  self.writer.write(
    '<script src=\'/s_src/js_contrib/closure-library/closure/goog/base.js\'></script><script src=\'/s_dev/js/panel.js\'></script><script src=\'/s_src/js/apps/panel/init.js\'></script>'
  ); // @30:1

  }

}; // @31:1


Main.prototype.renderBlockContent = function () { // @34:1
  var self = this;
  var d = this.data, vars = this.vars;
  self.writer.write(
    '<script>devPanelInstall();</script>'
  );
}; // @38:1

module.exports = Main;
